{"ast":null,"code":"var _jsxFileName = \"/app/src/components/NewUserModal/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Container } from \"./styles\";\nimport { useState } from \"react\";\nimport { Save } from \"@material-ui/icons\";\nimport Modal from 'react-modal';\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport closeImg from \"../../assets/close.svg\";\nimport { useUsers } from \"../../hooks/useUsers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function NewUserModal({\n  isOpen,\n  onRequestClose\n}) {\n  _s();\n\n  const {\n    createUser\n  } = useUsers();\n  const multiselectStyle = {\n    chips: {\n      // To change css chips(Selected options)\n      background: 'var(--blue)'\n    }\n  };\n  const [selectCompanies] = useState([{\n    id: 4,\n    name: \"Empresa 1\"\n  }, {\n    id: 5,\n    name: \"Empresa 2\"\n  }, {\n    id: 6,\n    name: \"Empresa 3\"\n  }]);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [telephone, setTelephone] = useState('');\n  const [birth_date, setBirth_date] = useState('');\n  const [birth_city, setBirth_city] = useState('');\n  const [companies, setCompanies] = useState([0]);\n\n  async function handleCreateNewUser(event) {\n    event.preventDefault();\n    await createUser({\n      //waits insert in order to close modal\n      name,\n      email,\n      telephone,\n      birth_date,\n      birth_city,\n      companies\n    }); //reset modal values\n\n    setName('');\n    setEmail('');\n    setTelephone('');\n    setBirth_date('');\n    setBirth_city('');\n    setCompanies([0]);\n    onRequestClose(); //close modal\n  }\n\n  Modal.setAppElement('#root');\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onRequestClose: onRequestClose,\n    overlayClassName: \"react-modal-overlay\",\n    className: \"react-modal-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: onRequestClose,\n      className: \"react-modal-close\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: closeImg,\n        alt: \"Close modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      onSubmit: handleCreateNewUser,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cadastrar novo usu\\xE1rio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Nome\",\n        type: \"text\",\n        required: true,\n        onChange: event => setName(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Email\",\n        type: \"text\",\n        required: true,\n        onChange: event => setEmail(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Telefone\",\n        type: \"text\",\n        onChange: event => setTelephone(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Cidade de nascimento\",\n        type: \"text\",\n        onChange: event => setBirth_city(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Data de nascimento\",\n        type: \"date\",\n        required: true,\n        onChange: event => setBirth_date(new Date(event.target.value).toISOString().split('T')[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Multiselect, {\n        placeholder: \"Empresas\",\n        style: multiselectStyle,\n        emptyRecordMsg: \"Nenhum resultado correspondente...\",\n        options: selectCompanies,\n        onSelect: event => {\n          let selected = [];\n          event.forEach(company => {\n            selected.push(company.id);\n            setCompanies(selected);\n          });\n        },\n        onRemove: event => {\n          let selected = [];\n          event.forEach(company => {\n            selected.push(company.id);\n            setCompanies(selected);\n          });\n        },\n        displayValue: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: [/*#__PURE__*/_jsxDEV(Save, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 39\n        }, this), \"Salvar\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NewUserModal, \"EiDbhdRthjdJCfv8YX6/JiNcRs8=\", false, function () {\n  return [useUsers];\n});\n\n_c = NewUserModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewUserModal\");","map":{"version":3,"sources":["/app/src/components/NewUserModal/index.tsx"],"names":["Container","useState","Save","Modal","Multiselect","useUsers","NewUserModal","isOpen","onRequestClose","createUser","multiselectStyle","chips","background","selectCompanies","id","name","setName","email","setEmail","telephone","setTelephone","birth_date","setBirth_date","birth_city","setBirth_city","companies","setCompanies","handleCreateNewUser","event","preventDefault","setAppElement","closeImg","target","value","Date","toISOString","split","selected","forEach","company","push"],"mappings":"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","sourcesContent":["import { Container } from \"./styles\";\nimport { FormEvent, useState } from \"react\";\nimport { Save } from \"@material-ui/icons\";\nimport Modal from 'react-modal';\nimport {Multiselect} from 'multiselect-react-dropdown';\n\nimport closeImg from '../../assets/close.svg'\nimport { useUsers } from \"../../hooks/useUsers\";\n\ninterface NewUserModalProps {\n    isOpen: boolean;\n    onRequestClose: () => void;\n} \n\ninterface Company {\n    id: number,\n    company: string\n}\n\nexport function NewUserModal({isOpen, onRequestClose}: NewUserModalProps){\n    const {createUser} = useUsers()\n\n    const multiselectStyle = {\n        chips: { // To change css chips(Selected options)\n            background: 'var(--blue)'\n        }\n    }\n    const [selectCompanies] = useState([{id:4, name: \"Empresa 1\"}, {id:5, name: \"Empresa 2\"}, {id:6, name: \"Empresa 3\"}])\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [telephone, setTelephone] = useState('')\n    const [birth_date, setBirth_date] = useState('')\n    const [birth_city, setBirth_city] = useState('')\n    const [companies, setCompanies] = useState([0])\n    \n\n    async function handleCreateNewUser(event: FormEvent){\n        event.preventDefault();\n\n        await createUser({ //waits insert in order to close modal\n            name,\n            email,\n            telephone,\n            birth_date,\n            birth_city,\n            companies\n        })\n\n        //reset modal values\n        setName('')\n        setEmail('')\n        setTelephone('')\n        setBirth_date('')\n        setBirth_city('')\n        setCompanies([0])\n\n        onRequestClose() //close modal\n    }\n\n    Modal.setAppElement('#root')\n\n    return (\n        <Modal\n        isOpen={isOpen}\n        onRequestClose={onRequestClose}\n        overlayClassName=\"react-modal-overlay\"\n        className=\"react-modal-content\">\n\n            <button\n            type=\"button\"\n            onClick={onRequestClose}\n            className=\"react-modal-close\">\n                <img src={closeImg} alt=\"Close modal\"/>\n            </button>\n\n            <Container\n            onSubmit={handleCreateNewUser}>\n                <h2>Cadastrar novo usuário</h2>\n\n                <input\n                placeholder=\"Nome\"\n                type=\"text\"\n                required\n                onChange={event => setName(event.target.value)}/>\n\n                <input\n                placeholder=\"Email\"\n                type=\"text\"\n                required\n                onChange={event => setEmail(event.target.value)}/>\n\n                <input\n                placeholder=\"Telefone\"\n                type=\"text\"\n                onChange={event => setTelephone(event.target.value)}/>\n\n                <input\n                placeholder=\"Cidade de nascimento\"\n                type=\"text\"\n                onChange={event => setBirth_city(event.target.value)}/>\n\n                <input \n                placeholder=\"Data de nascimento\"\n                type=\"date\"\n                required\n                onChange={event => setBirth_date(new Date(event.target.value).toISOString().split('T')[0])}/>\n\n                <Multiselect\n                    placeholder=\"Empresas\"\n\n                    style={multiselectStyle}\n                    emptyRecordMsg=\"Nenhum resultado correspondente...\"\n                    options={selectCompanies}\n                    onSelect={event => {\n                        let selected:number[] = []\n\n                        event.forEach((company:Company) => {\n                            selected.push(company.id)\n                            setCompanies(selected)\n                        })\n                    }}\n                    onRemove={event => {\n                        let selected:number[] = []\n\n                        event.forEach((company:Company) => {\n                            selected.push(company.id)\n                            setCompanies(selected)\n                        })\n                    }}\n                    displayValue=\"name\"\n                />\n\n                <button type=\"submit\"><Save />Salvar</button>\n            </Container>\n\n      </Modal>\n    )\n}"]},"metadata":{},"sourceType":"module"}