{"ast":null,"code":"var _jsxFileName = \"/app/src/hooks/useUsers.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useState, useEffect, useContext } from 'react';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nconst MySwal = withReactContent(Swal);\n_c = MySwal;\nimport { api } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UsersContext = /*#__PURE__*/createContext({});\nexport function UsersProvider({\n  children\n}) {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    // mock api\n    // api.get('users')\n    //     .then(response => setUsers(response.data.users))\n    api.get('user').then(response => setUsers(response.data));\n  }, []);\n\n  async function createUser(userInput) {\n    if (Array.isArray(userInput.companies) && userInput.companies[0] !== 0) {\n      api.post('/user/create', userInput).then(response => {\n        const user = response.data;\n        setUsers([...users, user]);\n      });\n    } else {\n      await MySwal.fire({\n        title: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Aten\\xE7\\xE3o!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 24\n        }, this),\n        html: /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"Insira as empresas do usu\\xE1rio!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 23\n        }, this),\n        icon: 'warning'\n      });\n    }\n  }\n\n  async function deleteUser(userId) {\n    api.delete(`/user/${userId}/delete`).then(response => {\n      if (response.status === 200) {\n        api.get('user').then(response => setUsers(response.data));\n        MySwal.fire({\n          title: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Sucesso!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 28\n          }, this),\n          html: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"Usu\\xE1rio deletado com sucesso!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 27\n          }, this),\n          icon: 'success'\n        });\n      } else {\n        MySwal.fire({\n          title: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Erro!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 28\n          }, this),\n          html: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"Usu\\xE1rio n\\xE3o pode ser deletado!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 27\n          }, this),\n          icon: 'error'\n        });\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(UsersContext.Provider, {\n    value: {\n      users,\n      createUser,\n      deleteUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 13\n  }, this);\n}\n\n_s(UsersProvider, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n\n_c2 = UsersProvider;\nexport function useUsers() {\n  _s2();\n\n  const context = useContext(UsersContext);\n  return context;\n}\n\n_s2(useUsers, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MySwal\");\n$RefreshReg$(_c2, \"UsersProvider\");","map":{"version":3,"sources":["/app/src/hooks/useUsers.tsx"],"names":["createContext","useState","useEffect","useContext","Swal","withReactContent","MySwal","api","UsersContext","UsersProvider","children","users","setUsers","get","then","response","data","createUser","userInput","Array","isArray","companies","post","user","fire","title","html","icon","deleteUser","userId","delete","status","useUsers","context"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport {createContext, useState, useEffect, ReactNode, useContext} from 'react'\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\n\nconst MySwal = withReactContent(Swal);\n\nimport {api} from '../services/api'\n\ninterface User {\n    id_user: number,\n    name: string,\n    email: string,\n    telephone: string,\n    birth_date: string,\n    birth_city: string,\n    companies: string\n}\n\ninterface UserInput {\n    name: string,\n    email: string,\n    telephone: string,\n    birth_date: string,\n    birth_city: string,\n    companies: number[]\n}\n\n//type UserInput = Omit<User, 'id_users' | 'companies'>\n\ninterface UsersProviderProps{\n    children: ReactNode\n}\n\ninterface UsersContextData{\n    users: User[],\n    createUser: (user: UserInput) => Promise<void>,\n    deleteUser: (userId: number) => Promise<void>\n}\n\nexport const UsersContext = createContext<UsersContextData>(\n    {} as UsersContextData\n)\n\nexport function UsersProvider({children} : UsersProviderProps){\n\n    const [users, setUsers] = useState<User[]>([])\n\n    useEffect(() =>{\n        \n        // mock api\n        // api.get('users')\n        //     .then(response => setUsers(response.data.users))\n\n        api.get('user')\n            .then(response => setUsers(response.data))\n\n\n    }, [])\n\n    async function createUser(userInput : UserInput){\n\n        if(Array.isArray(userInput.companies) && userInput.companies[0] !== 0){\n            \n            api.post('/user/create', userInput).then(response =>{\n                const user = response.data;\n\n                setUsers([\n                    ...users,\n                    user\n                ])\n    \n            })\n\n        }else{\n\n            await MySwal.fire({\n                title: <strong>Atenção!</strong>,\n                html: <i>Insira as empresas do usuário!</i>,\n                icon: 'warning'\n            })\n        }\n    \n    }\n\n    async function deleteUser(userId : number){\n\n        api.delete(`/user/${userId}/delete`).then(response =>{\n            \n            if(response.status === 200){\n    \n                api.get('user')\n                    .then(response => setUsers(response.data))\n    \n                MySwal.fire({\n                    title: <strong>Sucesso!</strong>,\n                    html: <i>Usuário deletado com sucesso!</i>,\n                    icon: 'success'\n                })\n    \n            }else{\n    \n                MySwal.fire({\n                    title: <strong>Erro!</strong>,\n                    html: <i>Usuário não pode ser deletado!</i>,\n                    icon: 'error'\n                })\n    \n            }\n    \n        })\n    \n    \n    }\n\n\n\n    return (<UsersContext.Provider value={{users, createUser, deleteUser}}>\n        {children}\n    </UsersContext.Provider>)\n}\n\n\n\nexport function useUsers(){\n    const context = useContext(UsersContext)\n\n    return context\n}"]},"metadata":{},"sourceType":"module"}