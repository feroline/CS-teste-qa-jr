[{"/app/src/index.tsx":"1","/app/src/App.tsx":"2","/app/src/styles/global.ts":"3","/app/src/hooks/useUsers.tsx":"4","/app/src/components/Dashboard/index.tsx":"5","/app/src/components/NewUserModal/index.tsx":"6","/app/src/components/Header/index.tsx":"7","/app/src/services/api.ts":"8","/app/src/components/Dashboard/styles.ts":"9","/app/src/components/NewUserModal/styles.ts":"10","/app/src/components/Header/styles.ts":"11","/app/src/components/TransactionsTable/index.tsx":"12","/app/src/components/TransactionsTable/styles.ts":"13"},{"size":2130,"mtime":1723221548351,"results":"14","hashOfConfig":"15"},{"size":810,"mtime":1723221548309,"results":"16","hashOfConfig":"15"},{"size":2398,"mtime":1723221549128,"results":"17","hashOfConfig":"15"},{"size":2905,"mtime":1723221549062,"results":"18","hashOfConfig":"15"},{"size":482,"mtime":1723221548704,"results":"19","hashOfConfig":"15"},{"size":4147,"mtime":1723221548932,"results":"20","hashOfConfig":"15"},{"size":348,"mtime":1723221548800,"results":"21","hashOfConfig":"15"},{"size":105,"mtime":1723221549095,"results":"22","hashOfConfig":"15"},{"size":635,"mtime":1723221548733,"results":"23","hashOfConfig":"15"},{"size":2583,"mtime":1723221548956,"results":"24","hashOfConfig":"15"},{"size":547,"mtime":1723221548826,"results":"25","hashOfConfig":"15"},{"size":2009,"mtime":1723221548992,"results":"26","hashOfConfig":"15"},{"size":1448,"mtime":1723221549017,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nk58ie",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":1,"warningCount":1,"fixableErrorCount":1,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/app/src/index.tsx",[],"/app/src/App.tsx",[],"/app/src/styles/global.ts",["57"],"import styled, { createGlobalStyle } from \"styled-components\";\nimport backgroundImage from \"../assets/office-background.png\"\n\nexport const GlobalStyle = createGlobalStyle`\n\n    :root{\n        --background: #F0F2F5;\n        --title: #363F5F;\n        --text: #969CB3;\n        --blue: #5429CC;\n        --light-blue: #6933FF;\n        --red: #E62E4D;\n        --green: #33CC95;\n        --main-shape: #FFFFFF;\n        --orange: #F05340;\n        --gray: #6C6C6C;\n\n        // background: url(${backgroundImage})  no-repeat center center fixed;\n        // backdrop-filter: blur(10px);\n\n        // -webkit-background-size: cover;\n        // -moz-background-size: cover;\n        // -o-background-size: cover;\n        // background-size: cover;\n\n        // -webkit-font-smoothing: antialiased;\n    }\n\n    *{\n        margin: 0;\n        border: 0;\n        box-sizing: border-box;\n    }\n\n    body{\n\n        height: 100%;\n        background: url(${backgroundImage})  no-repeat center center fixed;\n\n        -webkit-background-size: cover;\n        -moz-background-size: cover;\n        -o-background-size: cover;\n        background-size: cover;\n\n        -webkit-font-smoothing: antialiased;\n\n    }\n\n    body, input, text-area, button{\n        font-family: 'Poppins', sans-serif;\n        font-weight: 400;\n    }\n\n    h1, h2, h3, h4, h5, h6, strong{\n        font-weight: 600;\n    }\n\n    html{\n\n        @media (max-width: 1080px){\n            font-size: 93.75%; // 15px\n        }\n\n        @media (max-width: 720px){\n            font-size: 87.5%; // 14px\n        }\n\n    }\n\n    button{\n        cursor: pointer;\n    }\n\n    [disabled]{\n        opacity: 0.6;\n        cursor: not-allowed;\n    }\n\n    .react-modal-overlay{\n        background: rgb(0, 0, 0, 0.5);\n\n        position: fixed;\n        left: 0;\n        right: 0;\n        top: 0;\n        bottom: 0;\n\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n\n    .react-modal-content{\n        width: 100%;\n        max-width: 576px;\n\n        background: var(--background);\n        padding: 3rem;\n        border: 0;\n        border-radius: 0.25rem;\n\n        position: relative;\n    }\n\n    .react-modal-close{\n        position: absolute;\n        right: 1rem;\n        top: 1.5rem;\n        border: 0;\n        background: transparent;\n\n        transition: filter 0.2s;\n        &:hover{\n            filter: brightness(0.8);\n        }\n    }\n\n\n`","/app/src/hooks/useUsers.tsx",["58","59"],"import axios from 'axios'\nimport {createContext, useState, useEffect, ReactNode, useContext} from 'react'\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\n\nconst MySwal = withReactContent(Swal);\n\nimport {api} from '../services/api'\n\ninterface User {\n    id_user: number,\n    name: string,\n    email: string,\n    telephone: string,\n    birth_date: string,\n    birth_city: string,\n    companies: string\n}\n\ninterface UserInput {\n    name: string,\n    email: string,\n    telephone: string,\n    birth_date: string,\n    birth_city: string,\n    companies: number[]\n}\n\n//type UserInput = Omit<User, 'id_users' | 'companies'>\n\ninterface UsersProviderProps{\n    children: ReactNode\n}\n\ninterface UsersContextData{\n    users: User[],\n    createUser: (user: UserInput) => Promise<void>,\n    deleteUser: (userId: number) => Promise<void>\n}\n\nexport const UsersContext = createContext<UsersContextData>(\n    {} as UsersContextData\n)\n\nexport function UsersProvider({children} : UsersProviderProps){\n\n    const [users, setUsers] = useState<User[]>([])\n\n    useEffect(() =>{\n        \n        // mock api\n        // api.get('users')\n        //     .then(response => setUsers(response.data.users))\n\n        api.get('user')\n            .then(response => setUsers(response.data))\n\n\n    }, [])\n\n    async function createUser(userInput : UserInput){\n\n        if(Array.isArray(userInput.companies) && userInput.companies[0] !== 0){\n            \n            api.post('/user/create', userInput).then(response =>{\n                const user = response.data;\n\n                setUsers([\n                    ...users,\n                    user\n                ])\n    \n            })\n\n        }else{\n\n            await MySwal.fire({\n                title: <strong>Atenção!</strong>,\n                html: <i>Insira as empresas do usuário!</i>,\n                icon: 'warning'\n            })\n        }\n    \n    }\n\n    async function deleteUser(userId : number){\n\n        api.delete(`/user/${userId}/delete`).then(response =>{\n            \n            if(response.status === 200){\n    \n                api.get('user')\n                    .then(response => setUsers(response.data))\n    \n                MySwal.fire({\n                    title: <strong>Sucesso!</strong>,\n                    html: <i>Usuário deletado com sucesso!</i>,\n                    icon: 'success'\n                })\n    \n            }else{\n    \n                MySwal.fire({\n                    title: <strong>Erro!</strong>,\n                    html: <i>Usuário não pode ser deletado!</i>,\n                    icon: 'error'\n                })\n    \n            }\n    \n        })\n    \n    \n    }\n\n\n\n    return (<UsersContext.Provider value={{users, createUser, deleteUser}}>\n        {children}\n    </UsersContext.Provider>)\n}\n\n\n\nexport function useUsers(){\n    const context = useContext(UsersContext)\n\n    return context\n}","/app/src/components/Dashboard/index.tsx",[],"/app/src/components/NewUserModal/index.tsx",[],"/app/src/components/Header/index.tsx",["60"],"import logoImg from '../../assets/logo.png'\nimport { Container, Content } from './styles'\n\ninterface HeaderProps {\n    onOpenNewTransactionModal: () => void\n}\n\nexport function Header(){\n    return(\n        <Container>\n            <Content>\n                <img src={logoImg} alt=\"contatoseguro\"/>\n            </Content>\n        </Container>\n    )\n}","/app/src/services/api.ts",[],"/app/src/components/Dashboard/styles.ts",[],"/app/src/components/NewUserModal/styles.ts",[],"/app/src/components/Header/styles.ts",[],"/app/src/components/TransactionsTable/index.tsx",[],"/app/src/components/TransactionsTable/styles.ts",[],{"ruleId":"61","severity":1,"message":"62","line":1,"column":8,"nodeType":"63","messageId":"64","endLine":1,"endColumn":14},{"ruleId":"61","severity":1,"message":"65","line":1,"column":8,"nodeType":"63","messageId":"64","endLine":1,"endColumn":13},{"ruleId":"66","severity":2,"message":"67","line":8,"column":1,"nodeType":"68","endLine":8,"endColumn":36,"fix":"69"},{"ruleId":"61","severity":1,"message":"70","line":4,"column":11,"nodeType":"63","messageId":"64","endLine":4,"endColumn":22},"@typescript-eslint/no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","import/first","Import in body of module; reorder to top.","ImportDeclaration",{"range":"71","text":"72"},"'HeaderProps' is defined but never used.",[0,270],"import axios from 'axios'\nimport {createContext, useState, useEffect, ReactNode, useContext} from 'react'\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\n\nimport {api} from '../services/api'\n\nconst MySwal = withReactContent(Swal);"]